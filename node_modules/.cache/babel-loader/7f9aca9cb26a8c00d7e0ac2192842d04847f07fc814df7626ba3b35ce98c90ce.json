{"ast":null,"code":"class Auth {\n  constructor(url) {\n    this._url = url;\n  }\n  _checkApiResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Код ошибки : ${res.status}`);\n    }\n  }\n  register(password, email) {\n    return fetch(`${this._url}signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  login(password, email) {\n    return fetch(`${this._url}signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  checkToken(token) {\n    return fetch(`${this._url}users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n}\nconst auth = new Auth(\"https://auth.nomoreparties.co/\");\nexport default Auth;","map":{"version":3,"names":["Auth","constructor","url","_url","_checkApiResponse","res","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","login","checkToken","token","Authorization","auth"],"sources":["/Users/ekaterina.vanshet/Desktop/Dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\n  constructor(url) {\n    this._url = url;\n  }\n\n  _checkApiResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Код ошибки : ${res.status}`);\n    }\n  }\n\n  register(password, email) {\n    return fetch(`${this._url}signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ password, email }),\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n\n  login(password, email) {\n    return fetch(`${this._url}signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ password, email }),\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n\n  checkToken(token) {\n    return fetch(`${this._url}users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n}\nconst auth = new Auth(\"https://auth.nomoreparties.co/\");\n\nexport default Auth;\n"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAACC,GAAG,EAAE;IACf,IAAI,CAACC,IAAI,GAAGD,GAAG;EACjB;EAEAE,iBAAiBA,CAACC,GAAG,EAAE;IACrB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAE,gBAAeJ,GAAG,CAACK,MAAO,EAAC,CAAC;IACrD;EACF;EAEAC,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAE;IACxB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,IAAK,QAAO,EAAE;MACjCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,QAAQ;QAAEC;MAAM,CAAC;IAC1C,CAAC,CAAC,CAACO,IAAI,CAAEf,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAgB,KAAKA,CAACT,QAAQ,EAAEC,KAAK,EAAE;IACrB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,IAAK,QAAO,EAAE;MACjCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,QAAQ;QAAEC;MAAM,CAAC;IAC1C,CAAC,CAAC,CAACO,IAAI,CAAEf,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAiB,UAAUA,CAACC,KAAK,EAAE;IAChB,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACX,IAAK,UAAS,EAAE;MACnCa,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCQ,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC,CAACH,IAAI,CAAEf,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;AACF;AACA,MAAMoB,IAAI,GAAG,IAAIzB,IAAI,CAAC,gCAAgC,CAAC;AAEvD,eAAeA,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}