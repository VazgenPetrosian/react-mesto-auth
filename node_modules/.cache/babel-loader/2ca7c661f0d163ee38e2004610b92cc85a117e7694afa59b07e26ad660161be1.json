{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkApiResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Код ошибки : ${res.status}`);\n    }\n  }\n  //лайк\n  putUserLike(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  deleteUserLike(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  //лайк\n  editProfileInfo(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  editUserAvatar(avatarUrl) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarUrl.current.value\n      })\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  //методы с картами\n  setNewCard(cardData) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(cardData)\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      headers: this._headers\n    }).then(res => res.json());\n  }\n  //методы с картами\n\n  getUserData() {\n    return fetch(`${this._baseUrl}users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkApiResponse(res);\n    });\n  }\n  getAllData() {\n    return Promise.all([this.getInitialCards(), this.getUserData()]);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65/\",\n  headers: {\n    authorization: \"ce55775e-6fe1-4bd4-a65b-e80c24fd297e\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_ref","baseUrl","headers","_baseUrl","_headers","_checkApiResponse","res","ok","json","Promise","reject","status","putUserLike","cardId","fetch","method","then","deleteUserLike","editProfileInfo","_ref2","name","about","body","JSON","stringify","editUserAvatar","avatarUrl","avatar","current","value","setNewCard","cardData","deleteCard","getInitialCards","getUserData","getAllData","all","api","authorization"],"sources":["/Users/ekaterina.vanshet/Desktop/Dev/mesto-react/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkApiResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Код ошибки : ${res.status}`);\n    }\n  }\n  //лайк\n  putUserLike(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n\n  deleteUserLike(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n  //лайк\n  editProfileInfo({ name, about }) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n\n  editUserAvatar(avatarUrl) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarUrl.current.value,\n      }),\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n  //методы с картами\n  setNewCard(cardData) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(cardData),\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => {\n      return this._checkApiResponse(res);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, { headers: this._headers }).then(\n      (res) => res.json()\n    );\n  }\n  //методы с картами\n\n  getUserData() {\n    return fetch(`${this._baseUrl}users/me`, { headers: this._headers }).then(\n      (res) => {\n        return this._checkApiResponse(res);\n      }\n    );\n  }\n\n  getAllData() {\n    return Promise.all([this.getInitialCards(), this.getUserData()]);\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-65/\",\n  headers: {\n    authorization: \"ce55775e-6fe1-4bd4-a65b-e80c24fd297e\",\n    \"Content-Type\": \"application/json\",\n  },\n});\nexport default api;\n"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACRC,WAAWA,CAAAC,IAAA,EAAuB;IAAA,IAAtB;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAAF,IAAA;IAC9B,IAAI,CAACG,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACG,QAAQ,GAAGF,OAAO;EACzB;EAEAG,iBAAiBA,CAACC,GAAG,EAAE;IACrB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAE,gBAAeJ,GAAG,CAACK,MAAO,EAAC,CAAC;IACrD;EACF;EACA;EACAC,WAAWA,CAACC,MAAM,EAAE;IAClB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQU,MAAO,QAAO,EAAE;MACpDE,MAAM,EAAE,KAAK;MACbb,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CAACY,IAAI,CAAEV,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAW,cAAcA,CAACJ,MAAM,EAAE;IACrB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQU,MAAO,QAAO,EAAE;MACpDE,MAAM,EAAE,QAAQ;MAChBb,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CAACY,IAAI,CAAEV,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;EACA;EACAY,eAAeA,CAAAC,KAAA,EAAkB;IAAA,IAAjB;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAAF,KAAA;IAC7B,OAAOL,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,UAAS,EAAE;MACvCY,MAAM,EAAE,OAAO;MACfb,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBJ,IAAI;QACJC;MACF,CAAC;IACH,CAAC,CAAC,CAACL,IAAI,CAAEV,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAmB,cAAcA,CAACC,SAAS,EAAE;IACxB,OAAOZ,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,iBAAgB,EAAE;MAC9CY,MAAM,EAAE,OAAO;MACfb,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBG,MAAM,EAAED,SAAS,CAACE,OAAO,CAACC;MAC5B,CAAC;IACH,CAAC,CAAC,CAACb,IAAI,CAAEV,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;EACA;EACAwB,UAAUA,CAACC,QAAQ,EAAE;IACnB,OAAOjB,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,OAAM,EAAE;MACpCY,MAAM,EAAE,MAAM;MACdb,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,QAAQ;IAC/B,CAAC,CAAC,CAACf,IAAI,CAAEV,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;EAEA0B,UAAUA,CAACnB,MAAM,EAAE;IACjB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQU,MAAO,EAAC,EAAE;MAC9CE,MAAM,EAAE,QAAQ;MAChBb,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CAACY,IAAI,CAAEV,GAAG,IAAK;MACf,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC;EACJ;EAEA2B,eAAeA,CAAA,EAAG;IAChB,OAAOnB,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,OAAM,EAAE;MAAED,OAAO,EAAE,IAAI,CAACE;IAAS,CAAC,CAAC,CAACY,IAAI,CACnEV,GAAG,IAAKA,GAAG,CAACE,IAAI,CAAC,CACpB,CAAC;EACH;EACA;;EAEA0B,WAAWA,CAAA,EAAG;IACZ,OAAOpB,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,UAAS,EAAE;MAAED,OAAO,EAAE,IAAI,CAACE;IAAS,CAAC,CAAC,CAACY,IAAI,CACtEV,GAAG,IAAK;MACP,OAAO,IAAI,CAACD,iBAAiB,CAACC,GAAG,CAAC;IACpC,CACF,CAAC;EACH;EAEA6B,UAAUA,CAAA,EAAG;IACX,OAAO1B,OAAO,CAAC2B,GAAG,CAAC,CAAC,IAAI,CAACH,eAAe,CAAC,CAAC,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EAClE;AACF;AAEA,MAAMG,GAAG,GAAG,IAAIvC,GAAG,CAAC;EAClBG,OAAO,EAAE,8CAA8C;EACvDC,OAAO,EAAE;IACPoC,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AACF,eAAeD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}