{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\n// кастомные хуки всегда должны начинаться с глагола `use`, чтобы реакт понял, что это хук. Он следит за их вызовами\nexport function usePopupClose(isOpen, closePopup) {\n  _s();\n  useEffect(() => {\n    if (!isOpen) return; // останавливаем действие эффекта, если попап закрыт\n\n    const handleOverlay = event => {\n      // если есть `popup_opened` в классах блока, значит, кликнули на оверлей\n      if (event.target.classList.contains(\"popup_opened\")) {\n        closePopup();\n      }\n    };\n    const handleEscape = e => {\n      if (e.key === \"Escape\") {\n        closePopup();\n      }\n    };\n    document.addEventListener(\"keydown\", handleEscape);\n    document.addEventListener(\"mousedown\", handleOverlay);\n\n    //  обязательно удаляем обработчики в `clean-up`- функции\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n      document.removeEventListener(\"mousedown\", handleOverlay);\n    };\n    // обязательно следим за `isOpen`, чтобы срабатывало только при открытии, а не при любой перерисовке компонента\n  }, [isOpen, closePopup]);\n}\n_s(usePopupClose, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","usePopupClose","isOpen","closePopup","_s","handleOverlay","event","target","classList","contains","handleEscape","e","key","document","addEventListener","removeEventListener"],"sources":["/Users/ekaterina.vanshet/Desktop/Dev/mesto-react/mesto-react/src/hooks/usePopupClose.js"],"sourcesContent":["import { useEffect } from \"react\";\n// кастомные хуки всегда должны начинаться с глагола `use`, чтобы реакт понял, что это хук. Он следит за их вызовами\nexport function usePopupClose(isOpen, closePopup) {\n  useEffect(() => {\n    if (!isOpen) return; // останавливаем действие эффекта, если попап закрыт\n\n    const handleOverlay = (event) => {\n      // если есть `popup_opened` в классах блока, значит, кликнули на оверлей\n      if (event.target.classList.contains(\"popup_opened\")) {\n        closePopup();\n      }\n    };\n\n    const handleEscape = (e) => {\n      if (e.key === \"Escape\") {\n        closePopup();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleEscape);\n    document.addEventListener(\"mousedown\", handleOverlay);\n\n    //  обязательно удаляем обработчики в `clean-up`- функции\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscape);\n      document.removeEventListener(\"mousedown\", handleOverlay);\n    };\n    // обязательно следим за `isOpen`, чтобы срабатывало только при открытии, а не при любой перерисовке компонента\n  }, [isOpen, closePopup]);\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA,OAAO,SAASC,aAAaA,CAACC,MAAM,EAAEC,UAAU,EAAE;EAAAC,EAAA;EAChDJ,SAAS,CAAC,MAAM;IACd,IAAI,CAACE,MAAM,EAAE,OAAO,CAAC;;IAErB,MAAMG,aAAa,GAAIC,KAAK,IAAK;MAC/B;MACA,IAAIA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;QACnDN,UAAU,CAAC,CAAC;MACd;IACF,CAAC;IAED,MAAMO,YAAY,GAAIC,CAAC,IAAK;MAC1B,IAAIA,CAAC,CAACC,GAAG,KAAK,QAAQ,EAAE;QACtBT,UAAU,CAAC,CAAC;MACd;IACF,CAAC;IAEDU,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,YAAY,CAAC;IAClDG,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAET,aAAa,CAAC;;IAErD;IACA,OAAO,MAAM;MACXQ,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEL,YAAY,CAAC;MACrDG,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEV,aAAa,CAAC;IAC1D,CAAC;IACD;EACF,CAAC,EAAE,CAACH,MAAM,EAAEC,UAAU,CAAC,CAAC;AAC1B;AAACC,EAAA,CA3BeH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}